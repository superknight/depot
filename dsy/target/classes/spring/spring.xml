<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
                        http://www.springframework.org/schema/beans/spring-beans-4.3.xsd  
                        http://www.springframework.org/schema/context  
                        http://www.springframework.org/schema/context/spring-context-4.3.xsd  
                        http://www.springframework.org/schema/mvc  
                        http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
                        http://www.springframework.org/schema/aop
          				http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
          				http://www.springframework.org/schema/tx
          				http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	
	<!-- 启动组件扫描，排除@Controller组件，该组件由SpringMVC配置文件扫描 -->
	<context:component-scan base-package="dsy">
		<context:exclude-filter type="annotation"
					expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	<!-- 引入数据库配置文件 -->
	<context:property-placeholder location="classpath:config/jdbc.properties"/> 
	
	<!-- 数据源 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${driver}" />
		<property name="url" value="${url}" />
		<property name="username" value="${username}" />
		<property name="password" value="${password}" />
		<!-- 初始化连接大小 -->
		<property name="initialSize" value="${initialSize}"></property>
		<!-- 连接池最大数量 -->
		<property name="maxActive" value="${maxActive}"></property>
		<!-- 连接池最大空闲 -->
		<property name="maxIdle" value="${maxIdle}"></property>
		<!-- 连接池最小空闲 -->
		<property name="minIdle" value="${minIdle}"></property>
			<!-- 验证连接池取出的连接是否可用 -->
		<property name="validationQuery" value="${validationQuery}"></property>
		<!-- testWhileIdle = "true" -->
		<property name="testWhileIdle" value="true"></property>
		<!-- timeBetweenEvictionRunsMillis = 3600000 -->
		<property name="timeBetweenEvictionRunsMillis" value="${timeBetweenEvictionRunsMillis}"></property>
		<!-- minEvictableIdleTimeMillis = 18000000 -->
		<property name="minEvictableIdleTimeMillis" value="${minEvictableIdleTimeMillis}"></property>
		<!-- testOnBorrow = "true" -->
		<property name="testOnBorrow" value="${testOnBorrow}"></property>
	</bean>
	
	<!-- 配置Dao -->
	<!-- Dao -->
    <bean id="baseJdbcDao"   class="dsy.dao.impl.BaseJdbcDaoImpl">
        <property name="dataSource"><ref bean="dataSource"/></property>
        <property name="sqlUtil"><ref bean="sqlUtil"/></property>
        <property name="sqlToHtmlTable"><ref bean="sqlToHtmlTable"/></property>
    </bean>
    <bean id="sqlUtil" class="util.SqlUtil"></bean>
    <bean id="sqlToHtmlTable" class="util.SqlToHtmlTable" ></bean>
    
	
	
	 <!-- spring和MyBatis整合 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 注入数据源 -->
		<property name="dataSource" ref="dataSource"/>
		<!-- mybatis全局配置文件 -->
		<property name="configLocation" value="classpath:config/mybatis.xml"></property>
		<!-- 自动扫描mapper映射文件 -->
		<property name="mapperLocations" value="classpath:sqls/*.xml"></property>
	</bean>
	
	<!-- DAO接口所在包名，Spring会自动查找其下的类,并动态生成其代理子类对象 --> 
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="dsy.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>
	
	 <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactory" />
	</bean>
	 
	<!-- JDBC事务管理器  -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- 切面 -->
	<aop:config>
		<aop:pointcut id="point"
			expression="execution(* dsy.service.*.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="point" />
	</aop:config>
	
	<!-- 事务的通知 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
	      <tx:attributes>
            <tx:method name="save*" propagation="REQUIRED"/>
            <tx:method name="update*" propagation="REQUIRED"/>
            <tx:method name="remove*" propagation="REQUIRED"/>
            <tx:method name="add*" propagation="REQUIRED"/>
            <tx:method name="get*" propagation="REQUIRED" />
            <tx:method name="count*" propagation="REQUIRED" />
            <tx:method name="find*" propagation="REQUIRED" />
            <tx:method name="list*" propagation="REQUIRED" />
            <tx:method name="load*" />
            <tx:method name="*" />
            <!--默认其他方法都是REQUIRED-->
            <tx:method name="*"/>
        </tx:attributes>
	</tx:advice>
	
	 
</beans>